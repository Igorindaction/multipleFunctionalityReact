{"version":3,"sources":["UI/header/navbar.module.css","Components/post/post.module.css","UI/modalWindow/ModalWindow.module.css","Components/postFilter/postFilter.module.css","Components/login/Login.module.css","UI/button/button.module.css","UI/defaultInput/defaultInput.module.css","UI/select/SelectDefault.module.css","Components/context/authContext.js","UI/button/ButtonDefault.jsx","UI/header/navbar.jsx","UI/defaultInput/DefaultInput.jsx","assets/images/loader.gif","UI/loader/Loader.jsx","Components/login/Login.jsx","pages/about/about.jsx","pages/error/error.jsx","API/postService.js","hooks/useFetching.js","pages/postInfo/postInfo.jsx","hooks/usePost.jsx","UI/modalWindow/ModalWindow.jsx","UI/select/SelectDefault.jsx","Components/postFilter/PostFilter.jsx","Components/postForm/PostForm.jsx","Components/post/PostItem.jsx","Components/postList/PostList.jsx","API/utils/pages.js","hooks/iteratingPages.js","UI/pagination/Pagination.jsx","pages/posts/posts.jsx","router/router.jsx","hooks/useObserver.js","Components/appRouter.jsx","App.js","index.js"],"names":["module","exports","AuthContext","createContext","buttonDefault","children","props","className","s","Navbar","useContext","isAuth","setIsAuth","setModal","modal","useState","path","setPath","useEffect","window","location","pathname","changePath","pathName","navBar","buttonsWrapper","ButtonDefault","onClick","localStorage","removeItem","to","style","navBarLinks","aboutWrapper","DefaultInput","type","defaultInput","Loader","src","loader","alt","Login","isFetching","setIsFetching","initialValues","email","password","validate","values","errors","test","onSubmit","setSubmitting","setTimeout","setItem","isSubmitting","name","placeholder","component","disabled","e","preventDefault","marginTop","About","rel","target","textDecoration","color","href","ErrorPage","PostService","page","limit","axios","get","params","_page","_limit","response","id","useFetching","callback","isLoading","setIsLoading","error","setError","a","message","PostInfo","post","setPost","comments","setComments","useParams","getPageInfo","data","openPost","getPostComments","showComments","isComLoading","textAlign","marginBottom","title","body","map","comm","index","useSortedAndFilteredPosts","posts","sort","query","sortedPosts","useMemo","b","localeCompare","useSortedPosts","filter","toLowerCase","includes","ModalWindow","visible","setVisible","rootClasses","modalWrapper","push","modalActive","join","modalContent","stopPropagation","SelectDefault","options","defaultName","value","onChange","event","option","PostFilter","setFilter","setLimit","filterWrapper","selectWrapper","selectedSort","portionsWrapper","PostForm","create","newPost","length","margin","Post","router","useHistory","postWrapper","postContainer","text","buttonWrapper","delete","postList","sortedAndSearchedPosts","removePost","TransitionGroup","CSSTransition","timeout","classNames","PostItem","number","getPageCount","totalCount","Math","ceil","IteratingPages","totalPages","pagesArray","i","Pagination","changePage","totalPagesArray","p","Posts","PrivateRoutes","setPosts","setTotalPages","setPage","lastElement","useRef","getAll","headers","getPostsFromJson","isPostLoading","postError","ref","canLoad","observer","current","disconnect","IntersectionObserver","entries","isIntersecting","observe","useObserver","PostList","height","exact","PublicRoutes","AppRouter","route","App","getItem","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8b2496ca.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBar\":\"navbar_navBar__1Ry5p\",\"navBarLinks\":\"navbar_navBarLinks__2rfcs\",\"aboutWrapper\":\"navbar_aboutWrapper__1ZVSm\",\"buttonsWrapper\":\"navbar_buttonsWrapper__2rvRa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postContainer\":\"post_postContainer__tUQAg\",\"title\":\"post_title__xEtvV\",\"text\":\"post_text__1KYG_\",\"postWrapper\":\"post_postWrapper__2XJZN\",\"buttonWrapper\":\"post_buttonWrapper__1Txv7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalWrapper\":\"ModalWindow_modalWrapper__1SXhi\",\"modalContent\":\"ModalWindow_modalContent__1aRf5\",\"modalActive\":\"ModalWindow_modalActive__3rlpP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectWrapper\":\"postFilter_selectWrapper__FH3DB\",\"portionsWrapper\":\"postFilter_portionsWrapper__AIsAN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultInput\":\"Login_defaultInput__1c6yY\",\"buttonDefault\":\"Login_buttonDefault__14gyD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonDefault\":\"button_buttonDefault__Km1gi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultInput\":\"defaultInput_defaultInput__3xzvy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SelectDefault\":\"SelectDefault_SelectDefault__2sLWu\"};","import { createContext } from \"react\";\r\n\r\n\r\nexport const AuthContext = createContext(null)","import React from 'react';\r\nimport s from './button.module.css'\r\nconst buttonDefault = ({children, ...props}) => {\r\n    return (\r\n            <button className={s.buttonDefault} {...props}>{children}</button>\r\n    );\r\n};\r\n\r\nexport default buttonDefault;","import { AuthContext } from 'Components/context/authContext';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport ButtonDefault from 'UI/button/ButtonDefault';\r\nimport s from './navbar.module.css'\r\n\r\nconst Navbar = () => {\r\n    const {isAuth, setIsAuth} = useContext(AuthContext)\r\n    const {modal, setModal} = useContext(AuthContext)\r\n    const [path, setPath] = useState('')\r\n\r\n    useEffect(() => {\r\n        setPath(window.location.pathname)\r\n    },[path])\r\n    const logout = () => {\r\n        setIsAuth(false)\r\n        localStorage.removeItem('auth')\r\n        if(window.location.pathname === '/about'){\r\n            setPath('/about')\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    const changePath = (pathName) => {\r\n        if(!isAuth){\r\n            setPath(pathName)\r\n        }\r\n    }\r\n    return (\r\n        <div className={s.navBar}>\r\n            {isAuth && \r\n                <div className={s.buttonsWrapper}>\r\n                    <div>\r\n                        <ButtonDefault onClick={(logout)}>Выйти</ButtonDefault>\r\n                        <Link to='/posts'> <ButtonDefault onClick={() => setModal(true)} style={{'marginLeft': '30px'}}>Создать посты</ButtonDefault></Link>\r\n                    </div>\r\n                    <div className={s.navBarLinks}>\r\n                        <Link to='/about' onClick={() => changePath('/about')}>О проекте</Link>\r\n                        <Link to='/posts'>Посты</Link>\r\n                    </div>\r\n                </div>\r\n            }\r\n            { (!isAuth && path === '/about') &&\r\n            <div className={s.aboutWrapper}>\r\n                <Link to='/login'><ButtonDefault onClick={() => changePath('/login')}>Войти</ButtonDefault></Link>\r\n            </div>\r\n            }\r\n            {(!isAuth && path === '/login') &&\r\n            <div className={s.navBarLinks}>\r\n                <Link to='/about' onClick={() => changePath('/about')}>О проекте</Link>\r\n            </div>\r\n            }\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport s from './defaultInput.module.css'\r\n\r\nconst DefaultInput = (props) => {\r\n    return (\r\n\r\n         <input type='text' className={s.defaultInput} {...props}/>\r\n\r\n    );\r\n};\r\n\r\nexport default DefaultInput;","export default __webpack_public_path__ + \"static/media/loader.372b42cf.gif\";","import React from 'react'\r\nimport loader from './../../assets/images/loader.gif'\r\n\r\nlet Loader = () => {\r\n    return <div><img src={loader} alt='loader'/></div>\r\n}\r\n\r\nexport default Loader","import { AuthContext } from 'Components/context/authContext';\r\nimport React, { useContext, useState } from 'react';\r\nimport ButtonDefault from 'UI/button/ButtonDefault';\r\nimport DefaultInput from '../../UI/defaultInput/DefaultInput';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport s from './Login.module.css'\r\nimport Loader from 'UI/loader/Loader';\r\n\r\nconst Login = () => {\r\n    // @ts-ignore\r\n    const {isAuth, setIsAuth} = useContext(AuthContext)\r\n    const [isFetching, setIsFetching] = useState(true)\r\n    const autohrization = () => {\r\n        setIsAuth(true)\r\n        localStorage.setItem('auth', 'true')\r\n    }\r\n    return (\r\n        <div>\r\n        <Formik\r\n        initialValues={{ email: '', password: '' }}\r\n        validate={values => {\r\n          const errors = {};\r\n          if (!values.email) {\r\n            errors.email = 'Обязательное поле!';\r\n          } else if (!values.password){\r\n              errors.password = 'Обязательное поле!';\r\n          } else if (\r\n            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n          ) {\r\n            errors.email = 'Некорретный email!';\r\n          }\r\n          else if ( !/^(?=.{8,})((?=.*[!@#$%^&*()\\-_=+{};:,<.>]){1})(?=.*\\d)((?=.*[a-z]){1})((?=.*[A-Z]){1}).*$/i.test(values.password)) {\r\n            errors.password = 'Пароль должен состоять не менее чем из 8 символов, одного верхнего регистра, одной цифры и одного символа специального регистра!'\r\n          }\r\n          return errors;\r\n        }}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n          setIsFetching(false)\r\n          setTimeout(() => {\r\n            setSubmitting(false);\r\n            setIsFetching(true)\r\n            autohrization()\r\n          }, 2000);\r\n        }}\r\n      >\r\n        {({ isSubmitting }) => (\r\n            isFetching \r\n            ? <Form>\r\n                <h2>Войдите в личный кабинет</h2>\r\n                <Field type=\"email\" name=\"email\" className={s.defaultInput} placeholder='Email'/>\r\n                <ErrorMessage name=\"email\" component=\"div\" />\r\n                <Field type=\"password\" name=\"password\" className={s.defaultInput} placeholder='password'/>\r\n                <ErrorMessage name=\"password\" component=\"div\" />\r\n                <ButtonDefault type=\"submit\" disabled={isSubmitting} onSubmit={(e) => { e.preventDefault()}}>Войти</ButtonDefault>\r\n                <p style={{marginTop: \"10px\"}}>Подсказка: чтобы авторизоваться, введите случайный, но валидный e-mail и пароль</p>\r\n              </Form>\r\n              \r\n            : <Loader />\r\n        )}\r\n        \r\n      </Formik>\r\n\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Login;","import React from 'react';\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <ul style={{'marginTop': '20px'}}>Список используемых инструментов, методов, технологий и всего, что связано с разработкой данного проекта:</ul>\r\n                <li>Проект написан с помощью CRA</li>\r\n                <li>Проект реализован с помощью хуков (функциональной компонента)</li>\r\n                <li>Внутри проекта используются такие хуки, как: useState, useMemo, useEffect, useContext, useHistory, useRef, useParams</li>\r\n                <li>На странице логина настроена валидация с помощью библиотеки Formik</li>\r\n                <li>В проекте используются localStorage</li>\r\n                <li>В проекте используются кастомные хуки</li>\r\n                <li>Работа с <a rel=\"noreferrer\" target=\"_blank\" style={{textDecoration: \"underline\", color: \"blue\"}} href=\"https://jsonplaceholder.typicode.com/\">сервером</a>. Axios</li>\r\n                <li>В проекте настроено: поиск постов, фильтрация постов</li>\r\n                <li>Обмен данными между компонентами. От родителя к ребенку. От ребенка к родителю</li>\r\n                <li>Выполнен постраничный вывод постов. Пагинация, которая преобразовалась в \"бесконечную ленту\" (если потребуется, для пагинации есть свой комит, позволяющий к ней вернуться). Бесконечная лента реализована с помощью Intersection Observer API</li>\r\n                <li>Для навигации по страницам/элементам использовано React router, BrowserRouter, Route, Switch, Redirect</li>\r\n                <li>Динамическая навигация. useHistory, useParams</li>\r\n                <li>Внутри всех полей настроено двухстороннее связывание</li>\r\n                <li>Анимациии реализованы с помощью React transition group </li>\r\n                <li>Декомпозиция всего кода, за исключением CSS</li>\r\n                <li>CSS Modules</li>\r\n                <li>Модальное окно. Переиспользуемые UI компоненты</li>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default About;","import React from 'react';\r\n\r\nconst ErrorPage = () => {\r\n    return (\r\n        <div>\r\n            <h1 style={{color: 'red'}}>Извините, страница не найдена.</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ErrorPage;","import axios from \"axios\"\r\n\r\nexport default class PostService{\r\n        static async getAll(page = 1, limit = 10){\r\n            const response = await axios.get(`https://jsonplaceholder.typicode.com/posts`, {\r\n              params: {\r\n                _page: page,\r\n                _limit: limit\r\n              }\r\n            })\r\n            return response\r\n        }\r\n        static async getPageInfo(id){\r\n          const response = await axios.get(`https://jsonplaceholder.typicode.com/posts/` + id)\r\n          return response\r\n        }\r\n        static async getPostComments(id){\r\n          const response = await axios.get(`https://jsonplaceholder.typicode.com/posts/${id}/comments`)\r\n          return response\r\n        }\r\n}","import { useState } from \"react\"\r\n\r\n\r\nexport const useFetching = (callback) => {\r\n\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [error, setError] = useState('')\r\n\r\n    const fetching = async() => {\r\n        try {\r\n            setIsLoading(true)\r\n            await callback()\r\n        } catch(e){\r\n            setError(e.message)\r\n        } finally{\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n   return [fetching, isLoading, error]\r\n}","import PostService from 'API/postService';\r\nimport { useFetching } from 'hooks/useFetching';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Loader from 'UI/loader/Loader';\r\n\r\nconst PostInfo = () => {\r\n\r\n    const [post, setPost] = useState({})\r\n    const [comments, setComments] = useState([])\r\n    const params = useParams()\r\n\r\n\r\n    const [openPost, isLoading, postError] = useFetching( async() => {\r\n        // @ts-ignore\r\n        const response = await PostService.getPageInfo(params.id)\r\n        setPost(response.data);\r\n    })    \r\n    const [showComments, isComLoading, comError] = useFetching( async() => {\r\n        const response = await PostService.getPostComments(params.id)\r\n        setComments(response.data);\r\n    })\r\n    useEffect(() => {\r\n        // @ts-ignore\r\n        openPost(params.id)\r\n        // @ts-ignore\r\n        showComments(params.id)\r\n      }, [])  \r\n\r\n    return (\r\n        <div>\r\n            <h1 style={{textAlign: \"center\", marginTop: \"10px\"}}>Вы перешли на страницу юзера {params.id}</h1>\r\n            {isLoading \r\n                ? <Loader/> \r\n                : <div>\r\n                    <h2 style={{'marginTop': '20px', marginBottom: \"15px\" }}>Информация:</h2>\r\n                    <p><strong>Заголовок</strong>: {post.title}</p>\r\n                    <p><strong>Содержание</strong>: {post.body}</p>\r\n                 </div> \r\n            }\r\n            {isComLoading \r\n                ? <Loader/> \r\n                : <div style={{'marginTop': '20px'}}><h3 style={{marginBottom: \"15px\"}}>Комментарии:</h3>\r\n                {comments.map( (comm, index) => \r\n                    <div key={comm.email} style={{marginBottom: \"8px\"}}>\r\n                        <h5 key={comm.id}>{comm.email}</h5>\r\n                        <p key={comm.index}>{comm.name}</p>\r\n                    </div>\r\n                )}\r\n                  </div> \r\n            }\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostInfo;","import { useMemo } from \"react\"\r\n\r\nexport const useSortedPosts = (posts, sort) => {\r\n    const sortedPosts = useMemo(() => {\r\n        if(sort){\r\n            return [...posts].sort((a, b) => a[sort].localeCompare(b[sort]))\r\n            \r\n        }\r\n        return posts\r\n    }, [sort, posts])\r\n\r\n    return sortedPosts\r\n}\r\n\r\nexport const useSortedAndFilteredPosts = (posts, sort, query) => {\r\n    const sortedPosts = useSortedPosts(posts, sort)\r\n\r\n    const sortedAndSearchedPosts = useMemo(() => {\r\n        return sortedPosts.filter(posts => posts.title.toLowerCase().includes(query.toLowerCase()))\r\n    }, [query, sortedPosts])\r\n\r\n    return sortedAndSearchedPosts\r\n}","import React from 'react';\r\nimport s from './ModalWindow.module.css'\r\n\r\nconst ModalWindow = ({children, visible, setVisible}) => {\r\n\r\n    const rootClasses = [s.modalWrapper]\r\n    \r\n    if(visible){\r\n        rootClasses.push(s.modalActive)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={rootClasses.join(' ')} onClick={() => {setVisible(false)}}>\r\n            <div className={s.modalContent} onClick={(e) => {e.stopPropagation()}}>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ModalWindow;","import React from 'react';\r\nimport s from './SelectDefault.module.css'\r\n\r\nconst SelectDefault = ({options, defaultName, value, onChange}) => {\r\n\r\n    return (\r\n\r\n        <select className={s.SelectDefault} value={value} onChange={event => onChange(event.target.value)}>\r\n            <option disabled value=\"\">{defaultName}</option>\r\n            {options.map( option => \r\n                <option value={option.value} key={option.value}>\r\n                   {option.name}\r\n                </option> \r\n            )}\r\n        </select>\r\n    );\r\n};\r\n\r\nexport default SelectDefault;","import React from 'react';\r\nimport DefaultInput from 'UI/defaultInput/DefaultInput';\r\nimport SelectDefault from 'UI/select/SelectDefault';\r\nimport s from './postFilter.module.css'\r\n\r\nconst PostFilter = ({filter, setFilter, limit, setLimit}) => {\r\n\r\n    return (\r\n        <div className={s.filterWrapper}>\r\n            <DefaultInput \r\n                placeholder='Поиск постов...'\r\n                value={filter.query}\r\n                onChange={ e => setFilter({...filter, query: e.target.value})}\r\n            />\r\n            <div className={s.selectWrapper}>\r\n                <SelectDefault\r\n                    value={filter.query}\r\n                    onChange={selectedSort => setFilter({...filter, sort: selectedSort})}\r\n                    defaultName='Сортировка'\r\n                    options={[\r\n                        { value: 'title', name: 'По заголовку' },\r\n                        { value: 'body', name: 'По тексту' },\r\n                        { value: '', name: 'Сбросить' }\r\n                    ]}\r\n                />\r\n                <div className={s.portionsWrapper}>\r\n                    <p>Выберите количество подгружаемых постов:</p>\r\n                    <SelectDefault value={limit} onChange={ value => setLimit(value)} defaultName='Количество постов на странице' options={[\r\n                        {value: 5, name: '5'},\r\n                        {value: 10, name: '10'},\r\n                        {value: 25, name: '25'},\r\n                        {value: -1, name: 'Загрузить все'}]\r\n                    }/>\r\n                </div>               \r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostFilter;","import React, { useState } from 'react';\r\nimport ButtonDefault from '../../UI/button/ButtonDefault';\r\nimport DefaultInput from '../../UI/defaultInput/DefaultInput';\r\n\r\n\r\nconst PostForm = ({create, posts}) => {\r\n    const [post, setPost] = useState({ title: '', body: '' })\r\n    function addNewPost(e) {\r\n        e.preventDefault()\r\n        const newPost={\r\n            ...post, id: posts.length + 0.1\r\n        }\r\n        create(newPost)\r\n        setPost({ title: '', body: '' })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form>\r\n                    <DefaultInput placeholder='Заголовок поста' value={post.title} onChange={e => setPost({ ...post, title: e.target.value })} type='text' />\r\n                    <DefaultInput placeholder='Текст поста' value={post.body} onChange={e => setPost({ ...post, body: e.target.value })} type='text' />\r\n                    <ButtonDefault onClick={addNewPost}>Создать пост</ButtonDefault>\r\n                <hr style={{ margin: '18px 0px' }}></hr>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostForm;","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport ButtonDefault from '../../UI/button/ButtonDefault';\r\n\r\nimport s from './post.module.css'\r\nconst Post = (props) => {\r\n    const router = useHistory   ()\r\n\r\n    return (\r\n        <div className={s.postWrapper}>  \r\n            <div className={s.postContainer}>\r\n                <h3 className={s.title}>{props.post.id}.{props.post.title}</h3>\r\n                <p className={s.text}>{props.post.body}</p>\r\n            </div>\r\n            <div className={s.buttonWrapper}>\r\n            <ButtonDefault onClick={() => router.push(`/posts/${props.post.id}`)}>Открыть</ButtonDefault>\r\n            <ButtonDefault onClick={() => props.delete(props.post)}>Удалить</ButtonDefault>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;","import PostItem from 'Components/post/PostItem';\r\nimport React from 'react';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport Loader from 'UI/loader/Loader';\r\nimport './../../App.css'\r\n\r\nconst postList = ({sortedAndSearchedPosts, removePost}) => {\r\n    return (\r\n        <div>\r\n      { sortedAndSearchedPosts.length !== 0 \r\n        && <TransitionGroup>\r\n          {sortedAndSearchedPosts.map( (post, index) =>\r\n            <CSSTransition\r\n            key={post.id}\r\n            timeout={500}\r\n            classNames=\"post\">\r\n              <PostItem post={post} key={post.id} number={index + 1} delete={removePost}/>\r\n            </CSSTransition>\r\n          )}\r\n          </TransitionGroup>\r\n        \r\n      }            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default postList;","export const getPageCount = (totalCount, limit) => {\r\n    return Math.ceil( totalCount / limit)\r\n}","import { useMemo } from 'react';\r\n\r\n\r\n\r\nexport const IteratingPages = (totalPages) => {\r\n    let pagesArray = []\r\n    const iteratingArray = useMemo(() => {\r\n      for (let i = 0; i < totalPages; i++){\r\n        pagesArray.push(i + 1)\r\n      }\r\n    },[totalPages, pagesArray])\r\n\r\n    return pagesArray\r\n}\r\n\r\nexport default IteratingPages;","import IteratingPages from 'hooks/iteratingPages';\r\nimport React from 'react';\r\nimport ButtonDefault from 'UI/button/ButtonDefault';\r\n\r\nconst Pagination = ({page, changePage, totalPages}) => {\r\n    \r\n    const totalPagesArray = IteratingPages(totalPages)\r\n    return (\r\n        <div className=\"button-wrapper\">\r\n            {\r\n                totalPagesArray.map((p, index) => \r\n                <ButtonDefault disabled key={index} onClick={(() => changePage(p))}  className={page === p ? 'currentPage' : 'buttonDefault' }>{p}</ButtonDefault>\r\n                )\r\n            }\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default Pagination;","\r\nimport { useSortedAndFilteredPosts } from \"hooks/usePost\";\r\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport ModalWindow from \"UI/modalWindow/ModalWindow\";\r\nimport PostFilter from \"../../Components/postFilter/PostFilter\";\r\nimport PostForm from \"../../Components/postForm/PostForm\";\r\nimport PostList from \"../../Components/postList/PostList\";\r\nimport PostService from \"API/postService\";\r\nimport Loader from \"UI/loader/Loader\";\r\nimport { useFetching } from \"hooks/useFetching\";\r\nimport { getPageCount } from \"API/utils/pages\";\r\nimport Pagination from \"UI/pagination/Pagination\";\r\nimport { useObserver } from \"hooks/useObserver\";\r\nimport { AuthContext } from \"Components/context/authContext\";\r\n\r\n\r\nfunction Posts() {\r\n\r\n  const [posts, setPosts] = useState([])\r\n  const [filter, setFilter] = useState({sort: '', query: ''})\r\n  const {modal, setModal} = useContext(AuthContext)\r\n  const [totalPages, setTotalPages] = useState(0)\r\n  const [limit, setLimit] = useState(10)\r\n  const [page, setPage] = useState(1)\r\n  const lastElement = useRef()\r\n\r\n\r\n\r\n  const sortedAndSearchedPosts = useSortedAndFilteredPosts(posts, filter.sort, filter.query)\r\n\r\n  const [getPostsFromJson, isPostLoading, postError] = useFetching( async() => {\r\n    const response = await PostService.getAll(page, limit)\r\n    setPosts([...posts, ...response.data])\r\n    const totalCount = (response.headers['x-total-count'])\r\n    setTotalPages(getPageCount(totalCount, limit))\r\n  })\r\n\r\n  useObserver(lastElement, page < totalPages, isPostLoading, (() => {\r\n      setPage(page + 1)\r\n  }))\r\n\r\n  useEffect(() => {\r\n    // @ts-ignore\r\n    getPostsFromJson(page, limit)\r\n  }, [page, limit])  \r\n\r\n  const createPost = (newPost) => {\r\n    setPosts([...posts, newPost])\r\n    setModal(false)\r\n  }\r\n\r\n  const showPostsDefault = () => {\r\n    setPosts(posts)\r\n  }\r\n\r\n  const removePost = (post) => {\r\n    setPosts(posts.filter(p => p.id !== post.id))\r\n  }\r\n\r\n  const changePage = (page) => {\r\n    setPage(page)\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {postError && <div>Произошла ошбика {postError}</div>}\r\n      <ModalWindow visible={modal} setVisible={setModal}>\r\n        <PostForm create={createPost} posts={posts}/>\r\n      </ModalWindow>\r\n        <PostFilter filter={filter} setFilter={setFilter} limit={limit} setLimit={setLimit}/>\r\n      <PostList sortedAndSearchedPosts={sortedAndSearchedPosts} removePost={removePost}/> \r\n      <div ref={lastElement} style={{height: '10px'}}></div>\r\n      {isPostLoading && <Loader />}\r\n      <Pagination page={page} changePage={changePage} totalPages={totalPages}/>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\n\r\n\r\nexport default Posts;\r\n","import Login from \"Components/login/Login\";\r\nimport About from \"pages/about/about\";\r\nimport ErrorPage from \"pages/error/error\";\r\nimport PostInfo from \"pages/postInfo/postInfo\";\r\nimport Posts from \"pages/posts/posts\";\r\n\r\n\r\n\r\nexport const PrivateRoutes = [\r\n    {path: '/Posts', component: Posts, exact: true},\r\n    {path: '/Posts/:id', component: PostInfo, exact: true},\r\n    {path: '/About', component: About, exact: true},\r\n    {path: '/Error', component: ErrorPage, exact: true}\r\n]\r\n\r\nexport const PublicRoutes = [\r\n    {path: '/Login', component: Login, exact: true},\r\n    {path: '/About', component: About, exact: true},\r\n\r\n]\r\n\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nexport const useObserver = (ref, canLoad, isLoading, callback) => {\r\n    const observer = useRef()\r\n    useEffect(() => {\r\n        if(isLoading) return;\r\n        // @ts-ignore\r\n        if(observer.current) observer.current.disconnect()\r\n        var cb = function(entries, observer) {\r\n          if(entries[0].isIntersecting && canLoad) {\r\n            callback()\r\n          }\r\n        }\r\n          observer.current = new IntersectionObserver(cb)\r\n          observer.current.observe(ref.current)\r\n    }, [isLoading])\r\n}","import React, { useContext } from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport { PrivateRoutes, PublicRoutes } from 'router/router';\r\nimport Loader from 'UI/loader/Loader';\r\nimport { AuthContext } from './context/authContext';\r\n\r\nconst AppRouter = () => {\r\n    const {isAuth, isLoading} = useContext(AuthContext)\r\n    if(isLoading){\r\n        return <Loader />\r\n    }\r\n\r\n    return ( \r\n    <div>\r\n        {isAuth\r\n            ?   <Switch>\r\n                    {PrivateRoutes.map((route, index) => \r\n                        <Route path={route.path} exact={route.exact} component={route.component} key={index}/>    \r\n                    )}\r\n                    <Redirect to='/about' />    \r\n                </Switch>\r\n\r\n            :   <Switch>   \r\n                    {PublicRoutes.map((route, index) => \r\n                        <Route path={route.path} exact={route.exact} component={route.component} key={index}/>    \r\n                    )}            \r\n                    <Redirect to='/login' />\r\n                </Switch>\r\n        }\r\n    </div>\r\n    )     \r\n};\r\n\r\nexport default AppRouter;","\nimport React, { useEffect, useState } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Navbar from \"UI/header/navbar\";\nimport AppRouter from \"Components/appRouter\";\nimport { AuthContext } from \"Components/context/authContext\";\n\n\nfunction App() {\n\n  const [isAuth, setIsAuth] = useState(false)\n  const [isLoading, setIsLoading] = useState(true)\n  const [modal, setModal] = useState(false)\n\n  useEffect(() => {\n      if(localStorage.getItem('auth')){\n        setIsAuth(true)\n      }\n      setIsLoading(false)\n  }, [])\n\n  return (\n    <AuthContext.Provider value={{\n      isAuth,\n      setIsAuth,\n      isLoading,\n      modal,\n      setModal\n\n    }}>\n      <BrowserRouter>\n        <Navbar />\n        <AppRouter />\n      </BrowserRouter>\n    </AuthContext.Provider>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport './reset.css'\n\nReactDOM.render(\n\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n  \n);\n\n\n"],"sourceRoot":""}